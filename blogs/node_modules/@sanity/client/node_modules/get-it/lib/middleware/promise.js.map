{"version":3,"sources":["../../src/middleware/promise.js"],"names":["global","require","Cancel","CancelToken","isCancel","promise","options","Promise","implementation","Error","onReturn","channels","context","resolve","reject","cancel","cancelToken","then","reason","abort","publish","error","subscribe","response","onlyBody","body","setTimeout","request","err","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,sBAAD,CAA3B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAACE,cAAR,IAA0BR,MAAM,CAACO,OAAjD;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,8EAAV,CAAN;AACD;;AAED,SAAO;AACLC,IAAAA,QAAQ,EAAE,kBAACC,QAAD,EAAWC,OAAX;AAAA,aACR,IAAIL,OAAJ,CAAY,UAACM,OAAD,EAAUC,MAAV,EAAqB;AAC/B,YAAMC,MAAM,GAAGH,OAAO,CAACN,OAAR,CAAgBU,WAA/B;;AACA,YAAID,MAAJ,EAAY;AACVA,UAAAA,MAAM,CAACV,OAAP,CAAeY,IAAf,CAAoB,UAAAC,MAAM,EAAI;AAC5BP,YAAAA,QAAQ,CAACQ,KAAT,CAAeC,OAAf,CAAuBF,MAAvB;AACAJ,YAAAA,MAAM,CAACI,MAAD,CAAN;AACD,WAHD;AAID;;AAEDP,QAAAA,QAAQ,CAACU,KAAT,CAAeC,SAAf,CAAyBR,MAAzB;AACAH,QAAAA,QAAQ,CAACY,QAAT,CAAkBD,SAAlB,CAA4B,UAAAC,QAAQ,EAAI;AACtCV,UAAAA,OAAO,CAACP,OAAO,CAACkB,QAAR,GAAmBD,QAAQ,CAACE,IAA5B,GAAmCF,QAApC,CAAP;AACD,SAFD,EAV+B,CAc/B;;AACAG,QAAAA,UAAU,CAAC,YAAM;AACf,cAAI;AACFf,YAAAA,QAAQ,CAACgB,OAAT,CAAiBP,OAAjB,CAAyBR,OAAzB;AACD,WAFD,CAEE,OAAOgB,GAAP,EAAY;AACZd,YAAAA,MAAM,CAACc,GAAD,CAAN;AACD;AACF,SANS,EAMP,CANO,CAAV;AAOD,OAtBD,CADQ;AAAA;AADL,GAAP;AA0BD,CAhCD;;AAkCAvB,OAAO,CAACH,MAAR,GAAiBA,MAAjB;AACAG,OAAO,CAACF,WAAR,GAAsBA,WAAtB;AACAE,OAAO,CAACD,QAAR,GAAmBA,QAAnB;AAEAyB,MAAM,CAACC,OAAP,GAAiBzB,OAAjB","sourcesContent":["const global = require('../util/global')\nconst Cancel = require('./cancel/Cancel')\nconst CancelToken = require('./cancel/CancelToken')\nconst isCancel = require('./cancel/isCancel')\n\nconst promise = (options = {}) => {\n  const Promise = options.implementation || global.Promise\n  if (!Promise) {\n    throw new Error('`Promise` is not available in global scope, and no implementation was passed')\n  }\n\n  return {\n    onReturn: (channels, context) =>\n      new Promise((resolve, reject) => {\n        const cancel = context.options.cancelToken\n        if (cancel) {\n          cancel.promise.then(reason => {\n            channels.abort.publish(reason)\n            reject(reason)\n          })\n        }\n\n        channels.error.subscribe(reject)\n        channels.response.subscribe(response => {\n          resolve(options.onlyBody ? response.body : response)\n        })\n\n        // Wait until next tick in case cancel has been performed\n        setTimeout(() => {\n          try {\n            channels.request.publish(context)\n          } catch (err) {\n            reject(err)\n          }\n        }, 0)\n      })\n  }\n}\n\npromise.Cancel = Cancel\npromise.CancelToken = CancelToken\npromise.isCancel = isCancel\n\nmodule.exports = promise\n"],"file":"promise.js"}